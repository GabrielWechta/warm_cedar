{
  "spark": [
    {
      "name": "Max2",
      "sloc": [
        {
          "file": "max2.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "Max2.FindMax2",
      "sloc": [
        {
          "file": "max2.ads",
          "line": 5
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
  ],
  "session_map": {
    " 1": "/home/gabriel/Desktop/warm_cedar/rok_3/niezawodne_systemy_informatyczne/lista_2/zadanie_2/obj/gnatprove/max2__findmax2"
  },
  "proof": [
    {
      "file": "max2.adb",
      "line": 10,
      "col": 25,
      "rule": "VC_ASSERT",
      "severity": "medium",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 112,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 121,
              "time": 2.00000000000000E-02
            },
            "Z3": {
              "result": "Unknown (unknown)",
              "steps": 17982,
              "time": 2.00000000000000E-02
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 5
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 10,
      "check_col": 25,
      "cntexmp": {
        "max2.adb": {
          "previous": {
            "9": [
              {
                "name": "I",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "Max",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "Second",
                "value": "-1",
                "kind": "variable"
              }
            ]
          },
          "current": {
            "7": [
              {
                "name": "I",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "V",
                "value": "(others => 1)",
                "kind": "variable"
              }
            ],
            "8": [
              {
                "name": "Max",
                "value": "0",
                "kind": "variable"
              }
            ],
            "9": [
              {
                "name": "V",
                "value": "(others => 1)",
                "kind": "variable"
              }
            ],
            "10": [
              {
                "name": "Second",
                "value": "-1",
                "kind": "variable"
              }
            ]
          }
        },
        "max2.ads": {
          "previous": {
          },
          "current": {
            "5": [
              {
                "name": "V",
                "value": "(others => 1)",
                "kind": "variable"
              },
              {
                "name": "V'First",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "V'Last",
                "value": "0",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 0,
      "session_dir": 1,
      "how_proved": "prover"
    },
    {
      "file": "max2.adb",
      "line": 9,
      "col": 59,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 9,
      "check_col": 59,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 4,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 9,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_PRESERV",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 93,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 9,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 9,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_INIT",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 72,
              "time": 2.00000000000000E-02
            },
            "Z3": {
              "result": "Valid",
              "steps": 17158,
              "time": 2.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 9,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "Z3": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.99999995529652E-02
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 8,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_INIT",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 8,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.adb",
      "line": 8,
      "col": 32,
      "rule": "VC_LOOP_INVARIANT_PRESERV",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 28,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.adb",
      "check_line": 8,
      "check_col": 32,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 9,
      "col": 76,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 9,
      "check_col": 76,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 1.99999995529652E-02
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 11,
      "col": 66,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "Z3": {
              "result": "Valid",
              "steps": 2009,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 11,
      "check_col": 66,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        },
        "Z3": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 13,
      "col": 89,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 13,
      "check_col": 89,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 13,
      "col": 96,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 13,
      "check_col": 96,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 14,
      "col": 102,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 14,
      "check_col": 102,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 14,
      "col": 110,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 1.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 14,
      "check_col": 110,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 9.99999977648258E-03
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 14,
      "col": 49,
      "rule": "VC_INDEX_CHECK",
      "severity": "info",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 14,
      "check_col": 49,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "max2.ads",
      "line": 14,
      "col": 100,
      "rule": "VC_POSTCONDITION",
      "severity": "medium",
      "entity": {
        "name": "Max2.FindMax2",
        "sloc": [
          {
            "file": "max2.ads",
            "line": 5
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 253,
              "time": 2.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 234,
              "time": 2.00000000000000E-02
            },
            "Z3": {
              "result": "Unknown (unknown)",
              "steps": 41510,
              "time": 2.00000000000000E-02
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 5
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 294,
              "time": 2.00000000000000E-02
            },
            "Z3": {
              "result": "Unknown (unknown)",
              "steps": 39214,
              "time": 2.00000000000000E-02
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 5
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 104,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 165,
              "time": 0
            },
            "Z3": {
              "result": "Unknown (unknown)",
              "steps": 32324,
              "time": 0
            },
            "altergo": {
              "result": "Timeout",
              "steps": -1,
              "time": 5
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 29,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "max2.ads",
      "check_line": 8,
      "check_col": 14,
      "cntexmp": {
        "max2.adb": {
          "previous": {
            "9": [
              {
                "name": "I",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "Max",
                "value": "3",
                "kind": "variable"
              },
              {
                "name": "Second",
                "value": "1",
                "kind": "variable"
              }
            ]
          },
          "current": {
            "7": [
              {
                "name": "I",
                "value": "-1",
                "kind": "variable"
              },
              {
                "name": "V",
                "value": "(-1 => 2, others => 3)",
                "kind": "variable"
              }
            ],
            "8": [
              {
                "name": "Max",
                "value": "3",
                "kind": "variable"
              }
            ],
            "9": [
              {
                "name": "V",
                "value": "(-1 => 2, others => 3)",
                "kind": "variable"
              }
            ],
            "10": [
              {
                "name": "Second",
                "value": "1",
                "kind": "variable"
              }
            ],
            "12": [
              {
                "name": "Max",
                "value": "3",
                "kind": "variable"
              }
            ],
            "18": [
              {
                "name": "FindMax2'Result",
                "value": "1",
                "kind": "variable"
              },
              {
                "name": "Second",
                "value": "1",
                "kind": "variable"
              }
            ]
          }
        },
        "max2.ads": {
          "previous": {
          },
          "current": {
            "5": [
              {
                "name": "V",
                "value": "(-1 => 2, others => 3)",
                "kind": "variable"
              },
              {
                "name": "V'First",
                "value": "-1",
                "kind": "variable"
              },
              {
                "name": "V'Last",
                "value": "0",
                "kind": "variable"
              }
            ],
            "14": [
              {
                "name": "FindMax2'Result",
                "value": "1",
                "kind": "variable"
              },
              {
                "name": "I",
                "value": "-1",
                "kind": "variable"
              },
              {
                "name": "J",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "V",
                "value": "(-1 => 2, others => 3)",
                "kind": "variable"
              },
              {
                "name": "V'First",
                "value": "-1",
                "kind": "variable"
              },
              {
                "name": "V'Last",
                "value": "0",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 1,
      "session_dir": 1,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Max2",
          "sloc": [
            {
              "file": "max2.ads",
              "line": 1
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Max2.FindMax2",
          "sloc": [
            {
              "file": "max2.ads",
              "line": 5
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.eliminate_algebraic": 3.64800007082522E-03,
    "gnatwhy3.transformations.inline_trivial": 8.16574990749359E-01,
    "codepeer results": 2.80000003840541E-05,
    "init_why_sections": 6.09999988228083E-04,
    "gnatwhy3.transformations.eliminate_let_term": 1.52399996295571E-03,
    "gnatwhy3.transformations.detect_polymorphism": 3.40300006791949E-03,
    "globals/properties (advanced)": 1.53000000864267E-04,
    "gnatwhy3.transformations.eliminate_literal": 8.91999993473291E-03,
    "gnatwhy3.run_vcs": 1.03906996548176E-01,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 5.26000000536442E-03,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 3.33700003102422E-03,
    "flow analysis": 1.48099998477846E-03,
    "gnatwhy3.transformations.simplify_formula": 1.26040000468493E-02,
    "marking": 1.97000001207925E-04,
    "translation of standard": 3.50000010803342E-03,
    "gnatwhy3.transformations.eliminate_recursion": 8.61999986227602E-04,
    "gnatwhy3.register_vcs": 1.10700004734099E-03,
    "gnatwhy3.transformations.eliminate_epsilon": 7.02799996361136E-03,
    "globals (basic)": 1.25000005937181E-04,
    "gnatwhy3.schedule_vcs": 1.92199996672571E-03,
    "gnatwhy3.transformations.prepare_for_counterexmp": 4.81799989938736E-03,
    "gnatwhy3.save_session": 2.86899995990098E-03,
    "gnatwhy3.transformations.eliminate_inductive": 4.41899988800287E-03,
    "gnatwhy3.transformations.split_premise_right": 4.94300015270710E-03,
    "gnatwhy3.transformations.encoding_smt_if_poly": 6.80000011925586E-05,
    "gnatwhy3.transformations.eliminate_unused_hypo": 5.13360016047955E-02,
    "gnatwhy3.transformations.eliminate_builtin": 5.11599984019995E-03,
    "gnatwhy3.transformations.discriminate_if_poly": 1.04999999166466E-04,
    "gnatwhy3.init": 3.02522987127304E-01,
    "gnatwhy3.transformations.introduce_premises": 2.42700008675456E-03
  }
}
